@model XBCAD.ViewModels.AvailabilityViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mt-4">
    <h2>Default availability</h2>

    <form asp-action="SaveAvailability" method="post">
        <div class="availability-section">
            <div class="section-header">
                <h3 class="section-title">General Availability</h3>
            </div>
            <div class="availability-table">
                @for (int dayIndex = 0; dayIndex < Model.Days.Count; dayIndex++)
                {
                    var day = Model.Days[dayIndex];
                    <div class="day-row">
                        <div class="day-name">@day.Day</div>
                        <div class="time-slots">
                            @if (day.TimeSlots != null && day.TimeSlots.Count > 0)
                            {
                                @for (int i = 0; i < day.TimeSlots.Count; i++)
                                {
                                    <div class="time-slot d-flex align-items-center">
                                        <input type="text" name="Days[@dayIndex].TimeSlots[@i].StartTime" class="form-control me-2 timepicker" value="@day.TimeSlots[i].StartTime" placeholder="Start Time">
                                        <span class="me-2">until</span>
                                        <input type="text" name="Days[@dayIndex].TimeSlots[@i].EndTime" class="form-control me-2 timepicker" value="@day.TimeSlots[i].EndTime" placeholder="End Time">
                                        <button type="button" class="btn btn-danger me-2" onclick="removeTimeSlot(this)">&#x1F5D1;</button>
                                    </div>
                                }
                            }
                            <button type="button" class="btn btn-primary mt-2" onclick="addTimeSlot(this, @dayIndex)">&#x2795; Add Time</button>
                        </div>
                    </div>
                }
            </div>
            <div class="text-end mt-4">
                <button type="submit" class="btn btn-success">Save Availability</button>
            </div>
        </div>
    </form>

    <!-- Block to display saved availability -->
    <div class="mt-5">
        <h4>Current Availability</h4>
        @if (Model.Days.Any(day => day.TimeSlots.Any()))
        {
            <div class="saved-availability">
                @foreach (var day in Model.Days)
                {
                    <div class="saved-day">
                        <strong>@day.Day:</strong>
                        @if (day.TimeSlots.Any())
                        {
                            <ul>
                                @foreach (var slot in day.TimeSlots)
                                {
                                    <li>@slot.StartTime - @slot.EndTime</li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p>No availability set for this day.</p>
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <p>No availability saved yet.</p>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Initialize Flatpickr on time inputs
        function initializeTimePickers() {
            $(".timepicker").flatpickr({
                enableTime: true,
                noCalendar: true,
                dateFormat: "H:i",  // Use 24-hour format
                time_24hr: true
            });
        }

        initializeTimePickers(); // Initialize on page load

        function addTimeSlot(button, dayIndex) {
            var container = $(button).closest('.time-slots');
            var timeSlotCount = container.children('.time-slot').length;

            // Create a new time slot dynamically
            var newSlot = $('<div class="time-slot d-flex align-items-center">' +
                '<input type="text" name="Days[' + dayIndex + '].TimeSlots[' + timeSlotCount + '].StartTime" class="form-control me-2 timepicker" placeholder="Start Time">' +
                '<span class="me-2">until</span>' +
                '<input type="text" name="Days[' + dayIndex + '].TimeSlots[' + timeSlotCount + '].EndTime" class="form-control me-2 timepicker" placeholder="End Time">' +
                '<button type="button" class="btn btn-danger me-2" onclick="removeTimeSlot(this)">&#x1F5D1;</button>' +
                '</div>');

            // Append the new time slot to the container
            container.append(newSlot);

            // Re-initialize Flatpickr for the newly added inputs
            initializeTimePickers();
        }

        function removeTimeSlot(button) {
            var slot = $(button).closest('.time-slot');
            slot.remove();
        }
    </script>
}
